./cast/
  CAST_GUI.m  :                   displays the main interactive window of CAST
  CONTENT.txt :                   this file
  Config/
    example_params.txt :            an example file for storing parameter values
  GUI/
    colorize_graph.m :              tries to assign colors as different as possible to neighboring vertices
    edit_options.m :                displays a GUI enabling the user to interactively edit structures
    gui_colors.m :                  displays a GUI enabling the user to choose his favorite colormap
    inspect_paths.m :               displays a pop-up window for the user to manually inspect the paths
    inspect_recording.m :           displays a pop-up window for the user to manually identify the channels
    inspect_segmentation.m :        displays a pop-up window for the user to manually inspect the segmentation
    inspect_tracking.m :            displays a pop-up window for the user to manually inspect the tracking
    plot_paths.m :                  draws spot paths as lines
    redbluemap.m :                  creates a red and blue colormap
  INSTALL.txt :                   A few expanations on how to install CAST
  LICENSE.txt :                   GNU General Public License v3
  MEX/
    bilinear_mex.c :                computes a bilinear interpolation of an image at the provided (sub)pixel coordinates
    bilinear_mex.m :                corresponding Matlab help file
    bridging_cost_sparse_mex.c :    computes the gap closing cost matrix, in sparse form, for gaussian spots
    bridging_cost_sparse_mex.m :    corresponding Matlab help file
    ctmf.c :                        constant time median filtering original C code
    ctmf.h :                        related header file
    gaussian_mex.c :                gaussian smoothing in C for speedup using the implementation from gaussian_smooth.c
    gaussian_mex.m :                corresponding Matlab help file
    gaussian_smooth.c :             gaussian smoothing function shared among several MEX function
    gaussian_smooth.h :             related header file
    gaussian_spots.c :              library of functions used to compute the various cost matrices
    gaussian_spots.h :              related header funtion
    get_sparse_data_mex.c :         returns the three vectors characterizing a sparse matrix
    get_sparse_data_mex.m :         corresponding Matlab help file
    joining_cost_sparse_mex.c :     computes the merging cost matrix, and the alternative cost vector, in sparse form, for gaussian spots
    joining_cost_sparse_mex.m :     corresponding Matlab help file
    linking_cost_sparse_mex.c :     computes the frame-to-frame cost matrix, in sparse form, for gaussian spots
    linking_cost_sparse_mex.m :     corresponding Matlab help file
    median_mex.c :                  constant-time median filter in C using the implementation ctmf.c
    median_mex.m :                  corresponding Matlab help file
    nl_means_mex.cpp :              non-local means denoising
    nl_means_mex.m :                corresponding Matlab help file
    splitting_cost_sparse_mex.c :   computes the splitting cost matrix, and the alternative cost vector, in sparse form, for gaussian spots
    splitting_cost_sparse_mex.m :   corresponding Matlab help file
  README.txt :                    A few expanations on how to use CAST
  file_io/
    export_movie.m :                exports an experiment as an AVI movie
    export_tracking.m :             writes CSV files containing the results of the tracking
    load_data.m :                   reads image files through imread
    load_parameters.m :             loads parameters from a configuration file into the options structure
    save_data.m :                   stores images into the provided filename as stack TIFF files using imwrite
    save_parameters.m :             saves the content of a parameter structure (or any other structure)
    size_data.m :                   extracts the number of frames as well as the size of a frame from a file
  helpers/
    all2uint16.m :                  converts any type of array to uint16, rescaling it to fit the new range of values
    clean_tmp_files.m :             removes all unused data in TmpData by recursively parsing the recording files
    extract_help_message.m :        reads the help message corresponding to the provided structure
    get_new_name.m :                returns the next available name for a file in an incrementally increasing name pattern
    get_struct.m :                  retrieve custom data structures
    mymean.m :                      computes the mean and standard deviation of the provided data, ignoring NaNs
    parse_metadata.m :              extracts relevant information from the metadata file
    parse_xml.m :                   converts an XML file to a MATLAB structure
    reconstruct_tracks.m :          gathers single plane detections into individual tracks
    set_pixel_size.m :              computes the actual size of the pixel in the image using the option structure
    update_structure.m :            converts an older structure into an up-to-date one
  image_analysis/
    estimate_noise.m :              returns an estimation of the noise present in the image
    imadm.m :                       implements the Absolute Difference Mask edge detector
    imatrou.m :                     implements a published spot detection algorithm
    imcosmics.m :                   implements a published cosmic rays removal
    imdenoise.m :                   removes noise in a given image using different filtering functions
    imdetrend.m :                   removes a 2D quadratic trend in an image as produced by uneven illumination
    imhotpixels.m :                 removes the so-called "hot pixels" (i.e. defective) in an image
    imnorm.m :                      normalizes the pixel value of an image
  install_CAST.m :                installs CAST
  libraries/
    LICENSES.txt :                  respective licenses from all functions present in this folder
    GaussMask2D.m :                 create a gaussian 2D mask
    absolutepath.m :                returns the absolute path relative to a given startpath
    dragzoom.m :                    Drag and zoom image tool
    lapjv_fast_sparse.m :           Jonker-Volgenant Algorithm for Linear Assignment Problem
    nl_means.m :                    denoises an image using Non-Local Means
    plot2svg.m :                    Matlab to SVG figure converter
    relativepath.m :                returns the relative path from an actual path to the target path
  modules/
    detect_maxima.m :               detects local maxima in biological images
    detect_spots.m :                detects spots in biological images using the "A-trous" method
    draw_window.m :                 represents an estimation window into an image
    estimate_spots.m :              performs an estimation of the size and shape of gaussian spots
    estimate_window.m :             performs an estimation of the mean and std of a rectangular window
    fuse_gaussians.m :              fuses partially overlapping gaussian spots using a Gaussian kernel
    fuse_windows.m :                fuses partially overlapping rectangular windows using a Gaussian kernel
    intensity_gaussians.m :         returns the total intensity of a gaussian spot
    intensity_windows.m :           returns the total intensity of a rectangular uniform window
    plot_gaussians.m :              draws gaussian spots as circles proportional to their variance
    plot_windows.m :                draws estimation windows as rectangles
  pipeline/
    convert_movie.m :               converts a recording such that it can be tracked properly
    filter_paths.m :                filters the paths previously build by tracking the detections
    filter_spots.m :                filters a list of estimated spots based on their intensity and size
    filter_tracking.m :             corrects for potential confusions of the tracking algorithm
    perform_step.m :                performs the steps specific to the selected segmentation approach
    preprocess_movie.m :            converts the OME-TIFF recordings contained in a tracking structure
    reconstruct_detection.m :       creates an image of the detected gaussian spots
    reestimate_spots.m :            re-estimates the segmentation of the various channels of an experiment
    segment_movie.m :               segments the various channels of an experiment
    track_spots.m :                 tracks spots over time using a global optimization algorithm
  sample_signal.ome.tif :         sample bioluminescence recording used in README.txt
